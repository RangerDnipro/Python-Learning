"""
Завдання 9. Автоматичне резервне копіювання
Напишіть менеджер контексту, який буде створювати резервну копію важливого файлу перед його обробкою.
Якщо обробка пройде успішно, оригінальний файл замінюється новим. У разі помилки резервна копія автоматично відновлюється.
"""

import shutil
import os


class BackupManager:
    """
    Контекстний менеджер для автоматичного створення резервної копії файлу та його відновлення у разі помилки
    Якщо обробка успішна, новий файл замінює оригінальний
    """

    def __init__(self, file_path):
        """
        Ініціалізація менеджера контексту
        :param file_path: Шлях до важливого файлу, з яким потрібно працювати
        """
        self.file_path = file_path
        # Створюємо шлях для резервної копії
        self.backup_path = file_path + '.bak'

    def __enter__(self):
        """
        Вхід у контекст: створення резервної копії оригінального файлу
        :return: Шлях до оригінального файлу для подальшої обробки
        """
        # Створюємо резервну копію оригінального файлу
        shutil.copy2(self.file_path, self.backup_path)
        print(f"Резервна копія створена: {self.backup_path}")
        return self.file_path

    def __exit__(self, exc_type, exc_value, traceback):
        """
        Вихід з контексту: у разі помилки відновлюється резервна копія, інакше — резервний файл видаляється
        :param exc_type: Тип винятку
        :param exc_value: Значення винятку
        :param traceback: Трейсбек винятку
        """
        if exc_type is None:
            # Якщо обробка пройшла успішно, видаляємо резервну копію
            os.remove(self.backup_path)
            print("Операція успішна, резервна копія видалена")
        else:
            # Якщо сталася помилка, відновлюємо оригінальний файл з резервної копії
            shutil.copy2(self.backup_path, self.file_path)
            print(f"Помилка! Відновлюємо оригінальний файл з резервної копії: {self.backup_path}")
        # Повертаємо False, щоб виняток не був подавлений
        return False


# Приклад використання контекстного менеджера для обробки файлу
file_path = 'homework_05_09.txt'

# Створюємо контекст для роботи з файлом
try:
    with BackupManager(file_path) as original_file:
        # Відкриваємо файл у режимі доповнення ('a')
        with open(original_file, 'a', encoding='utf-8') as f:
            f.write("\n\nОновлена інформація у важливому файлі!!!")
        print(f"Оригінальний файл '{original_file}' успішно оновлений")
except Exception as e:
    print(f"Сталася помилка: {e}")
