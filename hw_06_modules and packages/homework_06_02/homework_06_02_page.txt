<!DOCTYPE html>
<html lang="uk" dir="ltr">
<head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#">
    <meta charset="utf-8">
    <title>Ітератор</title>

    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="theme-color" content="#95f3fc" />

                
    <link rel="preload" href="/fonts/PTSans/ptsans-regular_en.woff2?1" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="/fonts/PTSans/ptsans-bold_en.woff2?1" as="font" type="font/woff2" crossorigin>
            <link rel="preload" href="/fonts/PTSans/ptsans-regular_cyrillic.woff2?1" as="font" type="font/woff2" crossorigin>
        <link rel="preload" href="/fonts/PTSans/ptsans-bold_cyrillic.woff2?1" as="font" type="font/woff2" crossorigin>
        <link rel="preload" href="/fonts/fontello/fontawesome.woff2?15843843" as="font" type="font/woff2" crossorigin>
        <link rel="preconnect dns-prefetch" href="https://cdn.paddle.com">
    <link rel="preconnect dns-prefetch" href="https://www.googletagmanager.com">

    <link rel="alternate" href="https://refactoring.guru/design-patterns/iterator" hreflang="x-default"/>
    <link rel="alternate" href="https://refactoring.guru/es/design-patterns/iterator" hreflang="es"/>
    <link rel="alternate" href="https://refactoring.guru/fr/design-patterns/iterator" hreflang="fr"/>
    <link rel="alternate" href="https://refactoring.guru/ja/design-patterns/iterator" hreflang="ja"/>
    <link rel="alternate" href="https://refactoring.guru/ko/design-patterns/iterator" hreflang="ko"/>
    <link rel="alternate" href="https://refactoring.guru/pl/design-patterns/iterator" hreflang="pl"/>
    <link rel="alternate" href="https://refactoring.guru/pt-br/design-patterns/iterator" hreflang="pt-br"/>
    <link rel="alternate" href="https://refactoring.guru/ru/design-patterns/iterator" hreflang="ru"/>
    <link rel="alternate" href="https://refactoring.guru/uk/design-patterns/iterator" hreflang="uk"/>
    <link rel="alternate" href="https://refactoringguru.cn/design-patterns/iterator" hreflang="zh"/>

    <meta name="description" content="Ітератор — це поведінковий патерн проектування, що дає змогу послідовно обходити елементи складових об&#039;єктів, не розкриваючи їхньої внутрішньої організації.">

    <link rel="canonical" href="https://refactoring.guru/uk/design-patterns/iterator"/>

    <link rel="icon" type="image/x-icon" href="/favicon.png"/>

        <meta property="fb:app_id" content="666819623386327"/>
        <meta property="og:type" content="website"/>
        <meta property="og:image" content="https://refactoring.guru/uk/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868"/>
    
                    <link rel="stylesheet" href="/css/public-packed.min.css?id=9e85bac1abb298c683bdc6e16ddfd97b">
        <style type="text/css">
                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local("PT Sans"),local("PTSans-Regular"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format("woff2");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local("PT Sans"),local("PTSans-Regular"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format("woff2");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local("PT Sans"),local("PTSans-Regular"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format("woff2");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local("PT Sans"),local("PTSans-Regular"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format("woff2");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local("PT Sans"),local("PTSans-Regular"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format("woff2");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local("PT Sans Bold"),local("PTSans-Bold"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format("woff2");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local("PT Sans Bold"),local("PTSans-Bold"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format("woff2");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local("PT Sans Bold"),local("PTSans-Bold"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format("woff2");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local("PT Sans Bold"),local("PTSans-Bold"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format("woff2");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local("PT Sans Bold"),local("PTSans-Bold"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format("woff2");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}
            </style>

    
            <script defer src="/js/public.min.js?id=321a61e8ec476c5d446437da17682e14"></script>
        <script defer src="/js/checkout.min.js?id=308b28edc486b80fd5a876b342a008a2"></script>
            <script defer src="https://cdn.paddle.com/paddle/v2/paddle.js"></script>
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC"></script>

    <script type="application/ld+json">
        {"@context": "http://schema.org", "@graph": [{"@type":"Person","@id":"https://refactoring.guru/uk#founder","name":"Олександр Швець"},{"@type":"Organization","@id":"https://refactoring.guru/uk#organization","name":"Refactoring.Guru / Рефакторинг.Гуру","description":"Рефакторинг.Гуру присвячений темним матеріям програмування: рефакторингу, патернам проектування, принципам SOLID та іншим важливим темам зі світу програмування.","image":{"@type":"ImageObject","@id":"https://refactoring.guru/uk#organizationlogo","url":"https://refactoring.guru/images/content-public/logos/logo-plain.png","caption":"Refactoring.Guru"},"logo":{"@id":"https://refactoring.guru/uk#organizationlogo"},"founder":{"@id":"https://refactoring.guru/uk#founder"},"sameAs":["https://www.facebook.com/refactoring.guru","https://twitter.com/RefactoringGuru","https://github.com/RefactoringGuru"]},{"@type":"WebSite","@id":"https://refactoring.guru/uk#website","url":"https://refactoring.guru/uk","name":"Refactoring.Guru / Рефакторинг.Гуру","description":"Рефакторинг.Гуру присвячений темним матеріям програмування: рефакторингу, патернам проектування, принципам SOLID та іншим важливим темам зі світу програмування.","author":{"@id":"https://refactoring.guru/uk#founder"},"publisher":{"@id":"https://refactoring.guru/uk#organization"},"copyrightYear":2014},{"@type":"WebPage","@id":"https://refactoring.guru/uk/design-patterns/iterator#webpage","url":"https://refactoring.guru/uk/design-patterns/iterator","inLanguage":"uk","name":"Ітератор","description":"Ітератор — це поведінковий патерн проектування, що дає змогу послідовно обходити елементи складових об'єктів, не розкриваючи їхньої внутрішньої організації.","isPartOf":{"@id":"https://refactoring.guru/uk#website"},"breadcrumb":{"@id":"https://refactoring.guru/uk/design-patterns/iterator#breadcrumb"},"primaryImageOfPage":{"@id":"https://refactoring.guru/uk/design-patterns/iterator#primaryimage"},"image":{"@type":"ImageObject","@id":"https://refactoring.guru/uk/design-patterns/iterator#primaryimage","url":"https://refactoring.guru/images/patterns/content/iterator/iterator-en-3x.png","width":1920,"height":1200}},{"@type":"Article","@id":"https://refactoring.guru/uk/design-patterns/iterator#article","isPartOf":{"@id":"https://refactoring.guru/uk/design-patterns/iterator#webpage"},"mainEntityOfPage":{"@id":"https://refactoring.guru/uk/design-patterns/iterator#webpage"},"author":{"@id":"https://refactoring.guru/uk#founder"},"publisher":{"@id":"https://refactoring.guru/uk#organization"},"headline":"Ітератор","datePublished":"2023-01-01","dateModified":"2024-01-01","articleSection":"Патерни","image":{"@id":"https://refactoring.guru/uk/design-patterns/iterator#primaryimage"}},{"@type":"BreadcrumbList","@id":"https://refactoring.guru/uk/design-patterns/iterator#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Головна","item":"https://refactoring.guru/uk"},{"@type":"ListItem","position":2,"name":"Патерни проектування","item":"https://refactoring.guru/uk/design-patterns"},{"@type":"ListItem","position":3,"name":"Поведінкові патерни","item":"https://refactoring.guru/uk/design-patterns/behavioral-patterns"}]}] }
    </script>

    <script>
function extend(){var extended={};var deep=false;var i=0;var length=arguments["length"];if(Object["prototype"]["toString"]["call"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object["prototype"]["hasOwnProperty"]["call"](obj,prop)){if(deep&& Object["prototype"]["toString"]["call"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}
function defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}
</script>
<script>
+function(sd){sd = (typeof sd === "string") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}("eyJsb2NhbGUiOiJ1ayIsImxvY2FsZV9wcmVmaXgiOiJ1a1wvIiwibG9jYWxpemVkX3VybF9wcmVmaXgiOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvdWtcLyIsInVybF9wcmVmaXgiOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwibG9jYWxpemVkX3VybF9wcmVmaXhfbSI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC91a1wvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6InVrIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=");
</script>

<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
            gtag('set', 'linker', {'domains': ["refactoring.guru,refactoringguru.cn"]});
        gtag('config', 'G-SR8Y3GYQYC', {
        // Disable default page view, because we're going to report them on our own.
        // This is done to report traffic on localized domains as part of the main website traffic
        // See the Chinese overrides below.
        send_page_view: false,
    });
</script>

<script>
    (() => {
        // On first page view after returning from social network, we need to send the social login event.
        (function detectSocialLogin() {
            let getCookie = function (name) {
                var nameEQ = name + "=";
                var ca = document.cookie.split(';');
                for (var i = 0; i < ca.length; i++) {
                    var c = ca[i];
                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);
                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
                }
                return null;
            };
            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');
            if (window.social_login_provider) {
                gtag('set', {referrer: null});
                gtag('event', 'login', {"method": window.social_login_provider});
                // Delete cookie.
                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';
            }
        })();

        function trackPageView(location, title) {
            location = location || document.location.href;
            title = title || document.title;

            // This is show on https://refactoringguru.cn/ and alike.
            if (typeof window.analytics_path_prefix === 'string') {
                if (/^(https?:\/\/[^\/]+?)\/$/.test(location)) {
                    location = location.replace(/(https?:\/\/[^\/]+?)\//, '$1' + window.analytics_path_prefix);
                } else {
                    location = location.replace(/(https?:\/\/[^\/]+?)\//, '$1' + window.analytics_path_prefix + '/');
                }
                gtag('set', {
                    'page_location': location
                });
            }

            // This is show on https://refactoring.guru/zh/login and alike.
            if (typeof window.analytics_location_prefix === 'string') {
                location = location.replace(/(https?:\/\/[^\/]+?)\//, window.analytics_location_prefix);
                gtag('set', {
                    'page_location': location
                });
            }

            gtag('event', 'page_view', {
                page_location: location,
                page_title: title,
                locale: window.locale ?? 'en'
            });
        }

        if (window.loadContent) {
            window.onPageLoad = window.onPageLoad || [];
            window.onPageLoad.push({
                func: function (context) {
                    trackPageView(window.location.origin + context.canonicalPath, context.title);
                },
                afterAll: true,
            });
        }
        else {
            trackPageView();
        }
    })();
</script>


</head>
<body class="locale-uk   announcement   iterator" data-body_class="iterator">

<div class="body-holder">

            <div class="announcement-block announcement-block-autumn prom" data-id="DIDP-announcement" data-creative-id="en" data-position="top">
        <a href="/uk/store">
            <img src="/images/content-public/ann/autumn/read.svg?id=0d119719d4d53f2e62fc6535cb544b74" loading="lazy" style="width: 32px; height:32px;vertical-align: middle;">
            <img src="/images/content-public/ann/autumn/tea-cup.svg?id=f95aba0fef52083e2dd0a8a64068e37f" loading="lazy" style="width: 32px; height:32px;vertical-align: middle;">
            <span class="announcement-link-text">Autumn SALE</span>
            <img src="/images/content-public/ann/autumn/mulled-wine.svg?id=ad4bec48a83ede3e72766d40a6a837ed" loading="lazy" style="width: 32px; height:32px;vertical-align: middle;">
            <img src="/images/content-public/ann/autumn/maple-leaf.svg?id=63cdc79ea962a2657a57f44a22d092b9" loading="lazy" style="width: 32px; height:32px;vertical-align: middle;">
        </a>
    </div>
    
    <div class="cart-placeholder">
    <div class="cart-block-container" style="display:none">
        <div class="cart-block btn-group">
            <a href="#checkout" class="btn cart open-checkout">
                <span class="cart-text"></span>&nbsp;<strong class="cart-total font-money"></strong>
            </a><a href="#checkout" class="btn btn-secondary checkout open-checkout"><i class="fa fa-shopping-cart" aria-hidden="true"></i> <span class="btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block"></span></a>
        </div>
    </div>
</div>
    <main role="main" class="main-content top-content center-content " data-page_class="">
        <div class="main-content-container center-content-container">
                        <div class="pattern page text">
<article>
    <div class="breadcrumb">
                                    <a class="home" href="/"><i class="fa fa-home" aria-hidden="true"></i></a>
                                                / <a class="type" href="/uk/design-patterns">Патерни проектування</a>
                                                / <a class="type" href="/uk/design-patterns/behavioral-patterns">Поведінкові патерни</a>
                        </div>
    <h1 class="title">Ітератор</h1>

    <script type="text/javascript">
        // Shorten examples titles for users.
        var h1 = document.getElementsByTagName("H1")[0];
        if (h1.offsetHeight > 160) {
            h1.className += ' smaller';
        }

        // Small beautification for pattern examples.
        var title = h1.innerHTML;
        title = title.replace(/^(Java|C\+\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');
        h1.innerHTML = title;
    </script>

            <div class="aka">
            Також відомий як: <span style="display:inline-block">Iterator</span>
        </div>
    
    

    <div class="section intent">
<h2 id="intent"><i class="fa fa-flip-horizontal fa-comment-alt-dots" aria-hidden="true"></i> Суть патерна</h2>
<p><strong>Ітератор</strong> — це поведінковий патерн проектування, що дає змогу послідовно обходити елементи складових об’єктів, не розкриваючи їхньої внутрішньої організації.</p>
<figure class="image"><img src="/images/patterns/content/iterator/iterator-en.png?id=d19123d71d355d01b0ede4be173eb695" alt="Патерн Ітератор" width="640" srcset="/images/patterns/content/iterator/iterator-en-2x.png?id=2a85705e8e5fab257802b2ce36d6d236 2x" /></figure>
</div>
<div class="section problem">
<h2 id="problem"><i class="fa fa-frown" aria-hidden="true"></i> Проблема</h2>
<p>Колекції — це найпоширеніша структура даних, яку ви можете зустріти в програмуванні. Це набір об’єктів, зібраний в одну купу за якимись критеріями.</p>
<figure class="image"><img src="/images/patterns/diagrams/iterator/problem1.png?id=52ef2fe2d4920e3fed696c221fe757f2" alt="Різні типи колекцій" width="490" srcset="/images/patterns/diagrams/iterator/problem1-2x.png?id=1f4384c3c631be238bfc23d6eb84a0ef 2x" loading="lazy" /><figcaption>
<p>Різні типи колекцій.</p>
</figcaption></figure>
<p>Більшість колекцій виглядають як звичайний список елементів. Але є й екзотичні колекції, побудовані на основі дерев, графів та інших складних структур даних.</p>
<p>Незважаючи на те, яким чином структуровано колекцію, користувач повинен мати можливість послідовно обходити її елементи, щоб виконувати з ними певні дії.</p>
<p>У який же спосіб слід переміщатися складною структурою даних? Наприклад, сьогодні може бути достатнім обхід дерева в глибину, але завтра виникне необхідність переміщуватися деревом по ширині. А на наступному тижні, хай йому грець, знадобиться можливість обходу колекції у випадковому порядку.</p>
<figure class="image"><img src="/images/patterns/diagrams/iterator/problem2.png?id=f9c1a746c787320291c85fdc2a314192" alt="Одну і ту саму колекцію можна обходити різними способами" width="600" srcset="/images/patterns/diagrams/iterator/problem2-2x.png?id=656b13c109d4d4960ea1f9fa993bae4c 2x" loading="lazy" /><figcaption>
<p>Одну і ту саму колекцію можна обходити різними способами.</p>
</figcaption></figure>
<p>Додаючи все нові алгоритми до коду колекції, ви потроху розмиваєте її основну задачу, що полягає в ефективному зберіганні даних. Деякі алгоритми можуть бути аж занадто «заточені» під певну програму, а тому виглядатимуть неприродно в загальному класі колекції.</p>
</div>
<div class="section solution">
<h2 id="solution"><i class="fa fa-smile-beam" aria-hidden="true"></i> Рішення</h2>
<p>Ідея патерна Ітератор полягає в тому, щоб винести поведінку обходу колекції з самої колекції в окремий об’єкт.</p>
<figure class="image"><img src="/images/patterns/diagrams/iterator/solution1.png?id=2f5fbcce6099d8ea09b2fbb83e3e7059" alt="Ітератори містять код обходу колекції" width="400" srcset="/images/patterns/diagrams/iterator/solution1-2x.png?id=dcebcad4c197bfa5f25f680382d0e5ac 2x" loading="lazy" /><figcaption>
<p>Ітератори містять код обходу колекції. Одну колекцію можуть обходити відразу декілька ітераторів.</p>
</figcaption></figure>
<p>Об’єкт-ітератор відстежуватиме стан обходу, поточну позицію в колекції та кількість елементів, які ще залишилося обійти. Одну і ту саму колекцію зможуть одночасно обходити різні ітератори, а сама колекція навіть не знатиме про це.</p>
<p>До того ж, якщо вам потрібно буде додати новий спосіб обходу, ви зможете створите окремий клас ітератора, не змінюючи існуючого коду колекції.</p>
</div>
<div class="section analogy">
<h2 id="analogy"><i class="fa fa-car-side" aria-hidden="true"></i> Аналогія з життя</h2>
<figure class="image"><img src="/images/patterns/content/iterator/iterator-comic-1-uk.png?id=bbb108ea2a4dde3bef3ba7f1746aa77a" alt="Варіанти прогулянок Римом" width="640" srcset="/images/patterns/content/iterator/iterator-comic-1-uk-2x.png?id=023bae668d334c94949c011a04eac65d 2x" loading="lazy" /><figcaption>
<p>Варіанти прогулянок Римом.</p>
</figcaption></figure>
<p>Ви плануєте полетіти до Риму та обійти всі визначні пам’ятки за кілька днів. Але по приїзді ви можете довго блукати вузькими вуличками, намагаючись знайти один тільки Колізей.</p>
<p>Якщо у вас обмежений бюджет, ви можете скористатися віртуальним гідом, встановленим у смартфоні, який дозволить відфільтрувати тільки цікаві вам об’єкти. А можете плюнути на все та найняти місцевого гіда, який хоч і обійдеться в копієчку, але знає все місто, як свої п’ять пальців, і зможе «занурити» вас в усі міські легенди.</p>
<p>Таким чином, Рим виступає колекцією пам’яток, а ваш мозок, навігатор чи гід — ітератором колекції. Ви як клієнтський код можете вибрати одного з ітераторів, відштовхуючись від вирішуваного завдання та доступних ресурсів.</p>
</div>
<div class="section structure-container">
<h2 id="structure"><i class="fa fa-sitemap" aria-hidden="true"></i> Структура</h2>
<div class="structure">
<div class="struct-image1 struct-image">
<figure class="image"><img class="structure-img-non-indexed d-none d-xl-block" src="/images/patterns/diagrams/iterator/structure.png?id=35ea851f8f6bbe51d79eb91e6e6519d0" alt="Структура класів патерна Ітератор" width="480" srcset="/images/patterns/diagrams/iterator/structure-2x.png?id=b7b4708d3f279dd046eb1692f1cba710 2x" loading="lazy" /><img class="structure-img-indexed d-xl-none" src="/images/patterns/diagrams/iterator/structure-indexed.png?id=7bc28907ff6b480db6635a93ebaa10ff" alt="Структура класів патерна Ітератор" width="520" srcset="/images/patterns/diagrams/iterator/structure-indexed-2x.png?id=d809428b2262e2013972fe69d2434473 2x" loading="lazy" /></figure>
</div>
<ol><li class="struct-li1">
<p><strong>Ітератор</strong> описує інтерфейс для доступу та обходу елементів колекцій.</p>
</li>
<li class="struct-li2">
<p><strong>Конкретний ітератор</strong> реалізує алгоритм обходу якоїсь конкретної колекції. Об’єкт ітератора повинен сам відстежувати поточну позицію при обході колекції, щоб окремі ітератори могли обходити одну і ту саму колекцію незалежно.</p>
</li>
<li class="struct-li3">
<p><strong>Колекція</strong> описує інтерфейс отримання ітератора з колекції. Як ми вже говорили, колекції не завжди є списком. Це може бути і база даних, і віддалене API, і навіть дерево <a href="/uk/design-patterns/composite">Компонувальника</a>. Тому сама колекція може створювати ітератори, оскільки вона знає, які саме ітератори здатні з нею працювати.</p>
</li>
<li class="struct-li4">
<p><strong>Конкретна колекція</strong> повертає новий екземпляр певного конкретного ітератора, зв’язавши його з поточним об’єктом колекції. Зверніть увагу на те, що сигнатура методу повертає інтерфейс ітератора. Це дозволяє клієнтові не залежати від конкретних класів ітераторів.</p>
</li>
<li class="struct-li5">
<p><strong>Клієнт</strong> працює з усіма об’єктами через інтерфейси колекції та ітератора. Через це клієнтський код не залежить від конкретних класів, що дозволяє застосовувати різні ітератори, не змінюючи існуючого коду програми.</p>
<p>В загальному випадку клієнти не створюють об’єкти ітераторів, а отримують їх з колекцій. Тим не менше, якщо клієнтові потрібний спеціальний ітератор, він завжди може створити його самостійно.</p>
</li></ol>
<style structure type="text/css" >
@media (min-width: 1200px) {
.structure {
margin: 0;
width: auto;
height: 620px;
}

.struct-image1 {
left: 180px;
top: 0px;
}

.struct-li1 {
left: 0px;
top: 70px;
width: 210px;
}

.struct-li2 {
left: 0px;
top: 200px;
width: 170px;
}

.struct-li3 {
left: 670px;
top: 10px;
width: 220px;
}

.struct-li4 {
left: 670px;
top: 280px;
width: 220px;
}

.struct-li5 {
left: 190px;
top: 440px;
width: 460px;
}

}

</style>
</div></div>
<div class="section pseudocode">
<h2 id="pseudocode"><i class="fa fa-hashtag" aria-hidden="true"></i> Псевдокод</h2>
<p>У цьому прикладі патерн <strong>Ітератор</strong> використовується для реалізації обходу нестандартної колекції, яка інкапсулює доступ до соціального графа Facebook. Колекція надає декілька ітераторів, які можуть обходити профілі людей різними способами.</p>
<figure class="image"><img src="/images/patterns/diagrams/iterator/example.png?id=f2a24ef3787bf80ed450709240506ff2" alt="Структура класів прикладу патерна Ітератор" width="600" srcset="/images/patterns/diagrams/iterator/example-2x.png?id=73c3e55f75ca0250bd84e8a1d8cc88d2 2x" loading="lazy" /><figcaption>
<p>Приклад обходу соціальних профілів через ітератор.</p>
</figcaption></figure>
<p>Зокрема, ітератор друзів перебирає всіх друзів профілю, а ітератор колег фільтрує друзів згідно їхньої приналежності до компанії профілю. Всі ітератори реалізують спільний інтерфейс, який дає змогу клієнтам працювати з профілями, не заглиблюючись у деталі роботи з соціальною мережею (наприклад, авторизацію, надсилання REST запитів та інше).</p>
<p>Крім того, Ітератор позбавляє код від прив’язки до конкретних класів колекцій. Це дозволяє додати підтримку іншого виду колекцій (наприклад, LinkedIn), не змінюючи клієнтський код, який працює з ітераторами та колекціями.</p>
<figure class="code">
<pre class="code" lang="pseudocode">// Загальний інтерфейс колекцій повинен визначити фабричний
// метод для виробництва ітератора. Можна визначити відразу
// кілька методів, щоб дати користувачам різні варіанти обходу
// однієї і тієї самої колекції.
interface SocialNetwork is
    method createFriendsIterator(profileId): ProfileIterator
    method createCoworkersIterator(profileId): ProfileIterator


// Конкретна колекція знає, об'єкти яких ітераторів потрібно
// створювати.
class Facebook implements SocialNetwork is
    // ... Основний код колекції ...

    // Код отримання потрібного ітератора.
    method createFriendsIterator(profileId) is
        return new FacebookIterator(this, profileId, &quot;friends&quot;)
    method createCoworkersIterator(profileId) is
        return new FacebookIterator(this, profileId, &quot;coworkers&quot;)


// Загальний інтерфейс ітераторів.
interface ProfileIterator is
    method getNext(): Profile
    method hasMore(): bool


// Конкретний ітератор.
class FacebookIterator implements ProfileIterator is
    // Ітератору потрібне посилання на колекцію, яку він
    // обходить.
    private field facebook: Facebook
    private field profileId, type: string

    // Кожен ітератор обходить колекцію, незалежно від інших,
    // тому самостійно відслідковує поточну позицію обходу.
    private field currentPosition
    private field cache: array of Profile

    constructor FacebookIterator(facebook, profileId, type) is
        this.facebook = facebook
        this.profileId = profileId
        this.type = type

    private method lazyInit() is
        if (cache == null)
            cache = facebook.socialGraphRequest(profileId, type)

    // Всі конкретні ітератори реалізують методи загального
    // інтерфейсу по-своєму.
    method getNext() is
        if (hasMore())
            result = cache[currentPosition]
            currentPosition++
            return result

    method hasMore() is
        lazyInit()
        return currentPosition &lt; cache.length


// Ось іще корисна тактика: ми можемо передавати об'єкт
// ітератора замість колекції до клієнтських класів. При такому
// підході клієнтський код не матиме доступу до колекцій, а
// значить, його не турбуватимуть подробиці їхньої реалізації.
// Йому буде доступний лише загальний інтерфейс ітераторів.
class SocialSpammer is
    method send(iterator: ProfileIterator, message: string) is
        while (iterator.hasMore())
            profile = iterator.getNext()
            System.sendEmail(profile.getEmail(), message)


// Головний клас програми конфігурує ітератори та колекції, як
// завгодно.
class Application is
    field network: SocialNetwork
    field spammer: SocialSpammer

    method config() is
        if working with Facebook
            this.network = new Facebook()
        if working with LinkedIn
            this.network = new LinkedIn()
        this.spammer = new SocialSpammer()

    method sendSpamToFriends(profile) is
        iterator = network.createFriendsIterator(profile.getId())
        spammer.send(iterator, &quot;Very important message&quot;)

    method sendSpamToCoworkers(profile) is
        iterator = network.createCoworkersIterator(profile.getId())
        spammer.send(iterator, &quot;Very important message&quot;)
</pre>
</figure>
</div>
<div class="section applicability-container">
<h2 id="applicability"><i class="fa fa-lightbulb-on" aria-hidden="true"></i> Застосування</h2>
<div class="applicability">
<div class="applicability-problem">
<p><i class="fa fa-fw fa-bug" aria-hidden="true"></i> Якщо у вас є складна структура даних, і ви хочете приховати від клієнта деталі її реалізації (з питань складності або безпеки).</p>
</div><div class="applicability-solution">
<p><i class="fa fa-fw fa-bolt" aria-hidden="true"></i> Ітератор надає клієнтові лише кілька простих методів перебору елементів колекції. Це не тільки спрощує доступ до колекції, але й захищає її від необережних або злочинних дій.</p>
</div>
<div class="applicability-problem">
<p><i class="fa fa-fw fa-bug" aria-hidden="true"></i> Якщо вам потрібно мати кілька варіантів обходу однієї і тієї самої структури даних.</p>
</div><div class="applicability-solution">
<p><i class="fa fa-fw fa-bolt" aria-hidden="true"></i> Нетривіальні алгоритми обходу структури даних можуть мати досить об’ємний код. Цей код буде захаращувати все навкруги — чи то самий клас колекції, чи частина бізнес-логіки програми. Застосувавши ітератор, ви можете виділити код обходу структури даних в окремий клас, спростивши підтримку решти коду.</p>
</div>
<div class="applicability-problem">
<p><i class="fa fa-fw fa-bug" aria-hidden="true"></i> Якщо вам хочеться мати єдиний інтерфейс обходу різних структур даних.</p>
</div><div class="applicability-solution">
<p><i class="fa fa-fw fa-bolt" aria-hidden="true"></i> Ітератор дозволяє винести реалізації різних варіантів обходу в підкласи. Це дозволить легко взаємозаміняти об’єкти ітераторів в залежності від того, з якою структурою даних доводиться працювати.</p>
</div>
</div></div>
<div class="section checklist">
<h2 id="checklist"><i class="fa fa-clipboard-list-check" aria-hidden="true"></i> Кроки реалізації</h2>
<ol>
<li>
<p>Створіть загальний інтерфейс ітераторів. Обов’язковий мінімум — це операція отримання наступного елемента. Але для зручності можна передбачити й інше. Наприклад, методи отримання попереднього елементу, поточної позиції, перевірки закінчення обходу тощо.</p>
</li>
<li>
<p>Створіть інтерфейс колекції та опишіть у ньому метод отримання ітератора. Важливо, щоб сигнатура методу повертала загальний інтерфейс ітераторів, а не один з конкретних ітераторів.</p>
</li>
<li>
<p>Створіть класи конкретних ітераторів для тих колекцій, які потрібно обходити за допомогою патерна. Ітератор повинен бути прив’язаний тільки до одного об’єкта колекції. Зазвичай цей зв’язок встановлюється через конструктор.</p>
</li>
<li>
<p>Реалізуйте методи отримання ітератора в конкретних класах колекцій. Вони повинні створювати новий ітератор того класу, який здатен працювати з даним типом колекції. Колекція повинна передавати посилання на власний об’єкт до конструктора ітератора.</p>
</li>
<li>
<p>У клієнтському коді та в класах колекцій не повинно залишитися коду обходу елементів. Клієнт повинен отримувати новий ітератор з об’єкта колекції кожного разу, коли йому потрібно перебрати її елементи.</p>
</li>
</ol>
</div>
<div class="section pros-cons">
<h2 id="pros-cons"><i class="fa fa-balance-scale" aria-hidden="true"></i> Переваги та недоліки</h2>
<div class="row"><div class="col-sm-6">
<ul>
<li>
<i class="fa fa-fw fa-check" aria-hidden="true"></i> Спрощує класи зберігання даних.</li>
<li>
<i class="fa fa-fw fa-check" aria-hidden="true"></i> Дозволяє реалізувати різні способи обходу структури даних.</li>
<li>
<i class="fa fa-fw fa-check" aria-hidden="true"></i> Дозволяє одночасно переміщуватися структурою даних у різних напрямках.</li>
</ul>
</div><div class="col-sm-6">
<ul>
<li>
<i class="fa fa-fw fa-times" aria-hidden="true"></i> Невиправданий, якщо можна обійтися простим циклом.</li>
</ul>
</div></div></div>
<div class="section relations">
<h2 id="relations"><i class="fa fa-exchange-alt" aria-hidden="true"></i> Відносини з іншими патернами</h2>
<ul>
<li>
<p>Ви можете обходити дерево <a href="/uk/design-patterns/composite">Компонувальника</a>, використовуючи <a href="/uk/design-patterns/iterator">Ітератор</a>.</p>
</li>
<li>
<p><a href="/uk/design-patterns/factory-method">Фабричний метод</a> можна використовувати разом з <a href="/uk/design-patterns/iterator">Ітератором</a>, щоб підкласи колекцій могли створювати необхідні їм ітератори.</p>
</li>
<li>
<p><a href="/uk/design-patterns/memento">Знімок</a> можна використовувати разом з <a href="/uk/design-patterns/iterator">Ітератором</a>, щоб зберегти поточний стан обходу структури даних та повернутися до нього в майбутньому, якщо буде потрібно.</p>
</li>
<li>
<p><a href="/uk/design-patterns/visitor">Відвідувач</a> можна використовувати спільно з <a href="/uk/design-patterns/iterator">Ітератором</a>. <em>Ітератор</em> відповідатиме за обхід структури даних, а <em>Відвідувач</em> — за виконання дій над кожним її компонентом.</p>
</li>
</ul>
</div>
<div class="section implementations">
<h2 id="implementations"><i class="fa fa-code" aria-hidden="true"></i> Приклади реалізації патерна</h2>
<p><a href="/uk/design-patterns/iterator/csharp/example" title="Ітератор на C#" class="prog-lang-link"><img width="53" height="53" loading="lazy" src="/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58" alt="Ітератор на C#" /></a>
<a href="/uk/design-patterns/iterator/cpp/example" title="Ітератор на C++" class="prog-lang-link"><img width="53" height="53" loading="lazy" src="/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858" alt="Ітератор на C++" /></a>
<a href="/uk/design-patterns/iterator/go/example" title="Ітератор на Go" class="prog-lang-link"><img width="53" height="53" loading="lazy" src="/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca" alt="Ітератор на Go" /></a>
<a href="/uk/design-patterns/iterator/java/example" title="Ітератор на Java" class="prog-lang-link"><img width="53" height="53" loading="lazy" src="/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e" alt="Ітератор на Java" /></a>
<a href="/uk/design-patterns/iterator/php/example" title="Ітератор на PHP" class="prog-lang-link"><img width="53" height="53" loading="lazy" src="/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618" alt="Ітератор на PHP" /></a>
<a href="/uk/design-patterns/iterator/python/example" title="Ітератор на Python" class="prog-lang-link"><img width="53" height="53" loading="lazy" src="/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f" alt="Ітератор на Python" /></a>
<a href="/uk/design-patterns/iterator/ruby/example" title="Ітератор на Ruby" class="prog-lang-link"><img width="53" height="53" loading="lazy" src="/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb" alt="Ітератор на Ruby" /></a>
<a href="/uk/design-patterns/iterator/rust/example" title="Ітератор на Rust" class="prog-lang-link"><img width="53" height="53" loading="lazy" src="/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87" alt="Ітератор на Rust" /></a>
<a href="/uk/design-patterns/iterator/swift/example" title="Ітератор на Swift" class="prog-lang-link"><img width="53" height="53" loading="lazy" src="/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d" alt="Ітератор на Swift" /></a>
<a href="/uk/design-patterns/iterator/typescript/example" title="Ітератор на TypeScript" class="prog-lang-link"><img width="53" height="53" loading="lazy" src="/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7" alt="Ітератор на TypeScript" /></a></p>
</div>


    <div class="banner-set" id="book-promo">
            <div class="prom banner-content banner-bg banner-striped banner-with-image" data-id="DP: 1: Ne vtykay" data-creative-id="standard-uk" data-position="content_bottom">
                <div class="banner-image">
                    <a href="/uk/design-patterns/book">
                        <img width="200" height="200" loading="lazy" src="/images/patterns/banners/patterns-book-banner-1-b.png?id=0877cab2f0102d98cd07b50af0e5beea" srcset="/images/patterns/banners/patterns-book-banner-1-b-2x.png?id=5572aa55e5b09e59780aca9e0ea8e44b 2x">
                    </a>
                </div>

                <div class="banner-text">
                    <h3 class="title">Не нудьгуй в транспорті</h3>
                    <p class="big">Краще почитай нашу книжку про патерни проектування.</p>
                    <p>Тепер це зручно робити навіть під час поїздок в громадському транспорті.</p>

                    <a class="btn btn-secondary" href="/uk/design-patterns/book"><i class="fa fa-book" aria-hidden="true"></i> Дізнатися більше…</a>
                </div>
            </div>
        </div>

    </article>

<nav class="prev-next">
                    <div class="next">
                <h4>Читаємо далі</h4>
                <a rel="next" href="/uk/design-patterns/mediator" class="btn btn-primary">Посередник&nbsp;<span class="fa fa-arrow-right"></span></a>
            </div>
                            <div class="prev">
                <h4>Повернутись назад</h4>
                <a rel="prev" href="/uk/design-patterns/command" class="btn btn-default"><span class="fa fa-arrow-left"></span>&nbsp;Команда </a>
            </div>
            </nav>
</div>

<aside class="feature content-secondary">
    <div class="prom banner-sidebar banner-removable banner-removable-patterns" data-id="DP: Sidebar" data-creative-id="standard-sidebar-uk" data-position="sidebar">
        <div class="banner-inner">
            <div class="image3d-book-right">
                <div class="image3d-cover" style="background: #0b3752;">
                    <a href="/uk/design-patterns/book">
                        <img width="250" height="375" loading="lazy" src="/images/patterns/book/web-cover-uk.png?id=03e01a1a94fb4b34fed20e260af002ec" srcset="/images/patterns/book/web-cover-uk-2x.png?id=beb38c652838bad2e9e7205bd0d7a293 2x">
                    </a>
                </div>
            </div>
            <div style="margin-top: 1rem">
                <p class="text-center" >Ця стаття є частиною нашої електронної книги <strong>Занурення в Патерни Проектування</strong>.</p>
                <a href="/uk/design-patterns/book" class="btn btn-secondary btn-block"><i class="fa fa-book" aria-hidden="true"></i> Дізнатися більше…</a>
            </div>
        </div>
    </div>


</aside>
                    </div>
    </main>

    <aside class="sidebar main-menu">
    <div class="main-menu-controls">
        <button class="navigation-toggle"><i class="fa fa-fw fa-times"></i></button>
    </div>
    <div class="main-menu-list-wrapper nano">
        <div class="main-menu-list nano-content">
            <a class="menu-brand" href="/uk">
                                    <img width=200 height=241 loading="lazy" alt="Refactoring.Guru" src="/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34" srcset="/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x">
                            </a>

            <div class="menu-container" style="position: relative">
                                <ul class="menu-list trail">
                            <li class="featured">
            <a href="/uk/store">
                <i class="fa fa-fw fa-star" aria-hidden="true"></i> Преміум контент
            </a>
    
            <ul >
                            <li class="featured menu-fs15">
            <a href="/uk/design-patterns/book">
                <i class="fa fa-fw fa-book" aria-hidden="true"></i> Книжка з паттернів
            </a>
    
    
            </li>
                                <li class="featured menu-fs15">
            <a href="/uk/refactoring/course">
                <i class="fa fa-fw fa-graduation-cap" aria-hidden="true"></i> Курс з рефакторингу
            </a>
    
    
            </li>
                        </ul>
    
            </li>
                                <li class="">
            <a href="/uk/refactoring">
                <i class="fa fa-fw fa-scissors" aria-hidden="true"></i> Рефакторинг
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/refactoring/what-is-refactoring">
                Вступ до рефакторингу
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/refactoring/what-is-refactoring">
                Чистий код
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/refactoring/technical-debt">
                Технічний борг
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/refactoring/when">
                Коли рефакторити
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/refactoring/how-to">
                Як рефакторити код
            </a>
    
    
            </li>
                        </ul>
    
            </li>
                                <li class="">
            <a href="/uk/refactoring/catalog">
                Каталог
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/refactoring/smells">
                Запахи
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/refactoring/smells/bloaters">
                Роздувальщики
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/smells/long-method">
                Довгий метод
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/smells/large-class">
                Занадто великий клас
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/smells/primitive-obsession">
                Одержимість елементарними типами
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/smells/long-parameter-list">
                Довгий список параметрів
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/smells/data-clumps">
                Групи даних
            </a>
    
    
            </li>
                        </ul>
    
            </li>
                                <li class="">
            <a href="/uk/refactoring/smells/oo-abusers">
                Порушники об'єктно-орієнтованого дизайну
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/smells/switch-statements">
                Оператори switch
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/smells/temporary-field">
                Тимчасове поле
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/smells/refused-bequest">
                Відмова від спадку
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/smells/alternative-classes-with-different-interfaces">
                Альтернативні класи з різними інтерфейсами
            </a>
    
    
            </li>
                        </ul>
    
            </li>
                                <li class="">
            <a href="/uk/refactoring/smells/change-preventers">
                Ускладнювачі змін
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/smells/divergent-change">
                Розбіжні модифікації
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/smells/shotgun-surgery">
                Стрільба дробом
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/smells/parallel-inheritance-hierarchies">
                Паралельні ієрархії наслідування
            </a>
    
    
            </li>
                        </ul>
    
            </li>
                                <li class="">
            <a href="/uk/refactoring/smells/dispensables">
                Забрюднювачі коду
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/smells/comments">
                Коментарі
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/smells/duplicate-code">
                Дублювання коду
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/smells/lazy-class">
                Ледачий клас
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/smells/data-class">
                Клас даних
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/smells/dead-code">
                Мертвий код
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/smells/speculative-generality">
                Теоретична спільність
            </a>
    
    
            </li>
                        </ul>
    
            </li>
                                <li class="">
            <a href="/uk/refactoring/smells/couplers">
                Заплутувальники зв'язками
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/smells/feature-envy">
                Заздрісні функції
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/smells/inappropriate-intimacy">
                Недоречна близькість
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/smells/message-chains">
                Ланцюжок викликів
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/smells/middle-man">
                Посередник
            </a>
    
    
            </li>
                        </ul>
    
            </li>
                                <li class="">
            <a href="/uk/refactoring/smells/other">
                Інші запахи
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/smells/incomplete-library-class">
                Неповнота бібліотечного класу
            </a>
    
    
            </li>
                        </ul>
    
            </li>
                        </ul>
    
            </li>
                                <li class="">
            <a href="/uk/refactoring/techniques">
                Рефакторинги
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/refactoring/techniques/composing-methods">
                Складання методів
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/extract-method">
                Відокремлення методу
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/inline-method">
                Вбудовування методу
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/extract-variable">
                Відокремлення змінної
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/inline-temp">
                Вбудовування змінної
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/replace-temp-with-query">
                Заміна змінної викликом методу
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/split-temporary-variable">
                Розщеплювання змінної
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/remove-assignments-to-parameters">
                Видалення присвоювань параметрам
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/replace-method-with-method-object">
                Заміна методу об'єктом методів
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/substitute-algorithm">
                Заміна алгоритму
            </a>
    
    
            </li>
                        </ul>
    
            </li>
                                <li class="">
            <a href="/uk/refactoring/techniques/moving-features-between-objects">
                Переміщення функцій між об'єктами
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/move-method">
                Переміщення методу
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/move-field">
                Переміщення поля
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/extract-class">
                Відокремлення класу
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/inline-class">
                Вбудовування класу
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/hide-delegate">
                Приховання делегування
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/remove-middle-man">
                Видалення посередника
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/introduce-foreign-method">
                Введення зовнішнього методу
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/introduce-local-extension">
                Введення локального розширення
            </a>
    
    
            </li>
                        </ul>
    
            </li>
                                <li class="">
            <a href="/uk/refactoring/techniques/organizing-data">
                Організація даних
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/self-encapsulate-field">
                Самоінкапсуляція поля
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/replace-data-value-with-object">
                Заміна простого поля об'єктом
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/change-value-to-reference">
                Заміна значення посиланням
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/change-reference-to-value">
                Заміна посилання значенням
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/replace-array-with-object">
                Заміна поля-масиву об'єктом
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/duplicate-observed-data">
                Дублювання видимих даних
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/change-unidirectional-association-to-bidirectional">
                Заміна одностороннього зв'язку двонаправленим
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/change-bidirectional-association-to-unidirectional">
                Заміна двонаправленого зв'язку одностороннім
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/replace-magic-number-with-symbolic-constant">
                Заміна магічного числа символьною константою
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/encapsulate-field">
                Інкапсуляція поля
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/encapsulate-collection">
                Інкапсуляція колекції
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/replace-type-code-with-class">
                Заміна кодування типу класом
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/replace-type-code-with-subclasses">
                Заміна кодування типу підкласами
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/replace-type-code-with-state-strategy">
                Заміна кодування типу станом/стратегією
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/replace-subclass-with-fields">
                Заміна підкласу полями
            </a>
    
    
            </li>
                        </ul>
    
            </li>
                                <li class="">
            <a href="/uk/refactoring/techniques/simplifying-conditional-expressions">
                Спрощення умовних виразів
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/decompose-conditional">
                Розподіл умовного оператора
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/consolidate-conditional-expression">
                Об'єднання умовних операторів
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/consolidate-duplicate-conditional-fragments">
                Об'єднання фрагментів, що дублюються, в умовних операторах
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/remove-control-flag">
                Видалення керуючого флагу
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/replace-nested-conditional-with-guard-clauses">
                Заміна вкладених умовних операторів граничним оператором
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/replace-conditional-with-polymorphism">
                Заміна умовного оператора поліморфізмом
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/introduce-null-object">
                Введення Null-об'єкта
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/introduce-assertion">
                Введення перевірки твердження
            </a>
    
    
            </li>
                        </ul>
    
            </li>
                                <li class="">
            <a href="/uk/refactoring/techniques/simplifying-method-calls">
                Спрощення викликів методів
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/rename-method">
                Перейменування методу
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/add-parameter">
                Додавання параметра
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/remove-parameter">
                Видалення параметру
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/separate-query-from-modifier">
                Розділення запиту і модифікатора
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/parameterize-method">
                Параметризація методу
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/replace-parameter-with-explicit-methods">
                Заміна параметра набором спеціалізованих методів
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/preserve-whole-object">
                Передача усього об'єкта
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/replace-parameter-with-method-call">
                Заміна параметра викликом методу
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/introduce-parameter-object">
                Заміна параметрів об'єктом
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/remove-setting-method">
                Видалення сеттера
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/hide-method">
                Приховання методу
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/replace-constructor-with-factory-method">
                Заміна конструктора фабричним методом
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/replace-error-code-with-exception">
                Заміна коду помилки виключенням
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/replace-exception-with-test">
                Заміна виключення перевіркою умови
            </a>
    
    
            </li>
                        </ul>
    
            </li>
                                <li class="">
            <a href="/uk/refactoring/techniques/dealing-with-generalization">
                Задачі узагальнення об'єктів
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/pull-up-field">
                Підйом поля
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/pull-up-method">
                Підйом методу
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/pull-up-constructor-body">
                Підйом тіла конструктора
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/push-down-method">
                Спуск методу
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/push-down-field">
                Спуск поля
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/extract-subclass">
                Витягання підкласу
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/extract-superclass">
                Відокремлення суперкласу
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/extract-interface">
                Відокремлення інтерфейсу
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/collapse-hierarchy">
                Згортання ієрархії
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/form-template-method">
                Створення шаблонного методу
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/replace-inheritance-with-delegation">
                Заміна наслідування делегуванням
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/replace-delegation-with-inheritance">
                Заміна делегування наслідуванням
            </a>
    
    
            </li>
                        </ul>
    
            </li>
                        </ul>
    
            </li>
                        </ul>
    
            </li>
                                <li class="trail">
            <a href="/uk/design-patterns">
                <i class="fa fa-fw fa-puzzle-piece" aria-hidden="true"></i> Патерни
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/design-patterns/what-is-pattern">
                Вступ до патернів
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/design-patterns/what-is-pattern">
                Що таке Патерн?
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/history">
                Історія патернів
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/why-learn-patterns">
                Навіщо знати патерни?
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/criticism">
                Критика патернів
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/classification">
                Класифікація патернів
            </a>
    
    
            </li>
                        </ul>
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/catalog">
                Каталог
            </a>
    
    
            </li>
                                <li class="menu-third-level">
            <a href="/uk/design-patterns/creational-patterns">
                Породжувальні
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/design-patterns/factory-method">
                Фабричний метод
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/abstract-factory">
                Абстрактна фабрика
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/builder">
                Будівельник
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/prototype">
                Прототип
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/singleton">
                Одинак
            </a>
    
    
            </li>
                        </ul>
    
            </li>
                                <li class="menu-third-level">
            <a href="/uk/design-patterns/structural-patterns">
                Структурні
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/design-patterns/adapter">
                Адаптер
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/bridge">
                Міст
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/composite">
                Компонувальник
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/decorator">
                Декоратор
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/facade">
                Фасад
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/flyweight">
                Легковаговик
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/proxy">
                Замісник
            </a>
    
    
            </li>
                        </ul>
    
            </li>
                                <li class="menu-third-level trail">
            <a href="/uk/design-patterns/behavioral-patterns">
                Поведінкові
            </a>
    
            <ul >
                            <li class="">
            <a href="/uk/design-patterns/chain-of-responsibility">
                Ланцюжок обов'язків
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/command">
                Команда
            </a>
    
    
            </li>
                                <li class="trail active">
            <a href="/uk/design-patterns/iterator">
                Ітератор
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/mediator">
                Посередник
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/memento">
                Знімок
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/observer">
                Спостерігач
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/state">
                Стан
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/strategy">
                Стратегія
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/template-method">
                Шаблонний метод
            </a>
    
    
            </li>
                                <li class="">
            <a href="/uk/design-patterns/visitor">
                Відвідувач
            </a>
    
    
            </li>
                        </ul>
    
            </li>
                                <li class="menu-code-examples">
            <a href="/uk/design-patterns/examples">
                Приклади коду
            </a>
    
            <ul >
                            <li class="menu-code-examples-item">
            <a href="/uk/design-patterns/csharp">
                C#
            </a>
    
    
            </li>
                                <li class="menu-code-examples-item">
            <a href="/uk/design-patterns/cpp">
                C++
            </a>
    
    
            </li>
                                <li class="menu-code-examples-item">
            <a href="/uk/design-patterns/go">
                Go
            </a>
    
    
            </li>
                                <li class="menu-code-examples-item">
            <a href="/uk/design-patterns/java">
                Java
            </a>
    
    
            </li>
                                <li class="menu-code-examples-item">
            <a href="/uk/design-patterns/php">
                PHP
            </a>
    
    
            </li>
                                <li class="menu-code-examples-item">
            <a href="/uk/design-patterns/python">
                Python
            </a>
    
    
            </li>
                                <li class="menu-code-examples-item">
            <a href="/uk/design-patterns/ruby">
                Ruby
            </a>
    
    
            </li>
                                <li class="menu-code-examples-item">
            <a href="/uk/design-patterns/rust">
                Rust
            </a>
    
    
            </li>
                                <li class="menu-code-examples-item">
            <a href="/uk/design-patterns/swift">
                Swift
            </a>
    
    
            </li>
                                <li class="menu-code-examples-item">
            <a href="/uk/design-patterns/typescript">
                TypeScript
            </a>
    
    
            </li>
                        </ul>
    
            </li>
                        </ul>
    
            </li>
                        </ul>
    
                </div>

            <div class="main-menu-aux-controls">
                <a href="https://refactoring.guru/uk/login" title="Увійти" style=" display: inline-flex; align-items: center; gap: 6px; "><svg style="width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)" class="inline-block mx-0"  xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor"opacity="0.4" d="M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z"/><path fill="currentColor"class="fa-primary" d="M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z"/></svg> Увійти</a>
                <a href="https://feedback.refactoring.guru/" class="userecho-public" rel="nofollow" title="Зв&#039;язатись"><i class="fa fa-fw fa-fw fa-envelope" aria-hidden="true"></i> Зв&#039;язатись</a>
            </div>
        </div>
    </div>
</aside>

    <nav class="navigation" role="navigation">
    <div class="navigation-container">
        <a class="navigation-brand" href="/uk">
            <img alt="Refactoring.Guru"
                 src="/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a"
                 srcset="/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x">
        </a>

        <div class="shop-link d-none d-lg-block" style="display: none !important;">
            <a class="btn btn-md btn-primary btn-featured" href="/uk/store"><svg style="width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d="M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z"/></svg>
                Мій магазин</a>
        </div>

        <ul class="navigation-menu">
                            <li class="nav-locale dropdown dropdown-locales">
                    <button class="dropdown-toggle" id="dropdownLanguage" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fa fa-fw fa-globe" aria-hidden="true"></i> <span class="caption d-none d-lg-inline-block">Українська</span>
                    </button>
                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownLanguage">
                                                                                                                        <a href="https://refactoring.guru/design-patterns/iterator" class="dropdown-item locale-link " data-locale="en" title="English">English</a>
                                                                                                                                <a href="https://refactoring.guru/es/design-patterns/iterator" class="dropdown-item locale-link " data-locale="es" title="Español">Español</a>
                                                                                                                                <a href="https://refactoring.guru/fr/design-patterns/iterator" class="dropdown-item locale-link " data-locale="fr" title="Français">Français</a>
                                                                                                                                <a href="https://refactoring.guru/ja/design-patterns/iterator" class="dropdown-item locale-link " data-locale="ja" title="日本語">日本語</a>
                                                                                                                                <a href="https://refactoring.guru/ko/design-patterns/iterator" class="dropdown-item locale-link " data-locale="ko" title="한국어">한국어</a>
                                                                                                                                <a href="https://refactoring.guru/pl/design-patterns/iterator" class="dropdown-item locale-link " data-locale="pl" title="Polski">Polski</a>
                                                                                                                                <a href="https://refactoring.guru/pt-br/design-patterns/iterator" class="dropdown-item locale-link " data-locale="pt-br" title="Português Brasileiro">Português Brasileiro</a>
                                                                                                                                <a href="https://refactoring.guru/ru/design-patterns/iterator" class="dropdown-item locale-link " data-locale="ru" title="Русский">Русский</a>
                                                                                                                                <a href="https://refactoring.guru/uk/design-patterns/iterator" class="dropdown-item locale-link active" data-locale="uk" title="Українська">Українська</a>
                                                                                                                                <a href="https://refactoringguru.cn/design-patterns/iterator" class="dropdown-item locale-link " data-locale="zh" title="中文">中文</a>
div>
                </li>
                        <li class="nav-contacts">
                <a class="userecho-private" href="https://feedback.refactoring.guru/?show_feedback_form_private=true" rel="nofollow" title="Зв&#039;язатись">
                    <i class="fa fa-fw fa-envelope" aria-hidden="true"></i> <span class="caption d-none d-xl-inline-block">Зв&#039;язатись</span>
                </a>
            </li>
                            <li class="nav-user">
                    <a href="https://refactoring.guru/uk/login" title="Увійти"><span class="sign-in-icon"><svg style="width: 24px; height: 24px; " class="inline-block "  xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor"opacity="0.4" d="M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z"/><path fill="currentColor"class="fa-primary" d="M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z"/></svg></span> <span class="account-icon" style="display:none"><svg style="width: 24px; height: 24px; " class="inline-block "  xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path fill="currentColor"opacity="0.4" d="M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z"/><path fill="currentColor"class="fa-primary" d="M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z"/></svg></span> <span class="sign-out-icon" style="display:none"><svg style="width: 24px; height: 24px; " class="inline-block "  xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor"opacity="0.4" d="M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z"/><path fill="currentColor"class="fa-primary" d="M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z"/></svg></span> <span class="caption d-none d-xl-inline-block">Увійти</span></a>
                </li>
                        <li class="nav-menu">
                <button class="navigation-toggle"><i class="fa fa-fw fa-bars" aria-hidden="true"></i></button>
            </li>
        </ul>
    </div>
</nav>

    <footer class="footer center-content">
    <div class="footer-container center-content-container">
        <div class="footer-inner container-fluid">
            <div class="row">
                <div class="col-8 col-md-10">
                    <ul class="footer-list footer-list-horizontal">
                        <li><a href="/uk">Головна</a></li>
                        <li><a href="/uk/refactoring">Рефакторинг</a></li>
                        <li><a href="/uk/design-patterns">Патерни</a></li>
                        <li><a href="/uk/store">Преміум контент</a></li>
                        <li><a href="https://refactoring.userecho.com/" rel="nofollow" class="userecho-public">Форум</a></li>
                        <li><a href="https://refactoring.userecho.com/" rel="nofollow" class="userecho-private">Зв&#039;язатись</a></li>
                    </ul>
                </div>
                <div class="col-4 col-md-2">
                    <ul class="footer-list footer-list-iconic footer-list-right">
                                                    <li><a href="https://www.facebook.com/refactoring.guru"><i class="fa fa-facebook-official"></i></a></li>
                                                <li><a href="/uk/sendy/form" rel="nofollow"><i class="fa fa-envelope" aria-hidden="true"></i></a></li>
                        <li><a href="https://github.com/RefactoringGuru"><i class="fa fa-github-circled"></i></a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="footer-second">
        <div class="footer-container center-content-container">
            <div class="footer-inner container-fluid">
                <div class="row">
                    <div class="col-12 col-sm-6">
                        <i class="fa fa-fw fa-copyright"></i> 2014-2024 <a href="/uk">Refactoring.Guru</a>. <span style="white-space: nowrap">Всі права захищено.</span><br>
                        <i class="fa fa-fw fa-image"></i> Ілюстрації намалював <a href="http://zhart.us/" rel="nofollow"><span style="white-space: nowrap">Дмитро Жарт</span></a>
                    </div>
                    <div class="footer-links-right col-12 col-sm-6 mt-4 mt-sm-0">
                        <ul class="footer-list footer-list-horizontal footer-list-right">
                            <li><a href="/uk/terms"><span>Умови використання</span></a>
                            </li>
                            <li><a href="/uk/privacy-policy"><span>Політика конфіденційності</span></a>
                            </li>
                            <li><a href="/uk/content-usage-policy"><span>Використання контенту</span></a>
                            </li>
                            <li><a href="/uk/site-about"><span>About us</span></a>
                            </li>
                        </ul>
                    </div>
                </div>
                                    <div class="row">
                        <div class="col-12 col-sm-4">
                            <div class="mt-4">
                                                                    <b>Український офіс:</b><br>
                                    <object class="fa-fw" style="height: 0.8rem; filter: invert(50%);"  type="image/svg+xml" data="/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234">
                                        <img class="fa-fw" style="height: 0.8rem;" src="/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234" alt="Organization address"/>
                                    </object> ФОП Ольга Скобєлєва<br>
                                    <svg style="width: 16px; height: 16px; margin-right: 1px; fill: currentColor;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><path d="M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z"/></svg> Аболмасова 7<br>
                                    <span style="margin-left: 21px;">Київ, Україна, 02002</span><br>
                                    <i class="fa fa-fw fa-envelope"></i>  Email: support@refactoring.guru
                                
                            </div>
                        </div>
                        <div class="col-12 col-sm-4">
                            <div class="mt-4">
                                <b>Spanish office:</b><br>
                                <object class="fa-fw" style="height: 0.8rem; filter: invert(50%);"  type="image/svg+xml" data="/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234">
                                    <img class="fa-fw" style="height: 0.8rem;" src="/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234" alt="Organization address"/>
                                </object> Oleksandr Shvets<br>
                                <svg style="width: 16px; height: 16px; margin-right: 1px; fill: currentColor;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><path d="M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z"/></svg> Avda Pamplona 64<br>
                                <span style="margin-left: 21px;">Pamplona, Spain, 31009</span><br>
                                <i class="fa fa-fw fa-envelope"></i>  Email: support@refactoring.guru
                            </div>
                        </div>
                    </div>
                            </div>
        </div>
    </div>
</footer>

</div>


    <script type="text/javascript">
        paddleInitIntervalRetryCounter = 0;
        let paddleInitInterval = setInterval(function() {
            if (typeof Paddle !== 'undefined') {
                clearInterval(paddleInitInterval);
                Paddle.Environment.set("production");
                Paddle.Initialize({
                    token: "live_9c8cced085720b9eba007b8581b",
                    eventCallback: function(data) {
                        if (data?.type === 'checkout.ping.size') {
                            return;
                        }
                        const ignoredPaddleEvents = [
                            'checkout.loaded',
                            'checkout.closed',
                            'checkout.completed',
                            'checkout.items.updated',
                            'checkout.items.removed',
                            'checkout.customer.created',
                            'checkout.customer.updated',
                            'checkout.customer.removed',
                            'checkout.payment.selected',
                            'checkout.payment.initiated',
                            'checkout.payment.failed',
                            'checkout.discount.applied',
                            'checkout.discount.removed',
                        ]
                        if (!data?.name || !ignoredPaddleEvents.includes(data?.name)) {
                            $.ajax({
                                method: "POST",
                                url: '/ajax/error',
                                data: {
                                    error: 'Paddle client init error.',
                                    order_id: checkout?.storage?.data?.id,
                                    data: data,
                                },
                                dataType: 'json',
                                crossDomain: true,
                                xhrFields: {
                                    withCredentials: true
                                },
                                timeout: CHECKOUT_AJAX_TIMEOUT
                            });
                        }
                    }
                });
            }
            else {
                paddleInitIntervalRetryCounter++;
                if (paddleInitIntervalRetryCounter > 20) {
                    clearInterval(paddleInitInterval);
                }
            }
        }, 500);
    </script>


<script defer>
    var CodeMirrorScripts = ["/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9"];
</script>



    <script>window.loadContent = true;window.loadCart = true;</script>
</body>
</html>
