"""
Завдання 6: Калькулятор з використанням замикань
Створити калькулятор, який використовує замикання для створення функцій додавання, віднімання, множення та ділення.
1.	Написати функцію create_calculator, яка приймає оператор (наприклад, '+', '-', '*', '/')
та повертає функцію для виконання обчислень.
2.	Використати цю функцію, щоб створити калькулятор для кількох операцій, і протестувати його.
"""


# Функція для створення калькулятора
def create_calculator(operator):
    """
    Створює калькулятор для заданого оператора.

    Параметри:
    operator (str): Оператор для обчислення ('+', '-', '*', '/').

    Повертає:
    function: Функція, що виконує операцію для двох аргументів a і b.

    Вкладена функція calculate(a, b):
    - Виконує обчислення залежно від оператора.
    - Повертає результат операції або повідомлення про помилку.

    Приклад:
    calc_add = create_calculator('+')
    print(calc_add(10, 5))  # Виведе: 15
    """
    # Вкладена функція для виконання операції
    def calculate(a, b):
        """
        Виконує арифметичну операцію між двома числами a і b.

        Параметри:
        a (float): Перше число.
        b (float): Друге число.

        Повертає:
        float або str: Результат операції або повідомлення про помилку.
        """
        operations = {'+': a + b, '-': a - b, '*': a * b, '/': a / b if b != 0 else "Помилка: ділення на нуль!"}
        return operations.get(operator, f"Невідомий оператор -> {operator}")

    # Повертаємо вкладену функцію (замикання)
    return calculate


print(create_calculator("+")(10, 5))
print(create_calculator("-")(10, 5))
print(create_calculator("*")(10, 5))
print(create_calculator("/")(10, 5))
print(create_calculator("/")(10, 0))
print(create_calculator("#")(10, 5))
